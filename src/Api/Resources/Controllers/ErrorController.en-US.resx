<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AlreadyExists" xml:space="preserve">
    <value>Already exists</value>
  </data>
  <data name="AnErrorOccurred" xml:space="preserve">
    <value>An error occurred</value>
  </data>
  <data name="Common.ImageIsEmpty" xml:space="preserve">
    <value>Image is empty</value>
  </data>
  <data name="Common.ImageTooLarge" xml:space="preserve">
    <value>The image you chose is too large. Maximum size is 10MB.</value>
  </data>
  <data name="Common.InvalidImageFormat" xml:space="preserve">
    <value>The format of the image you chose is not valid</value>
  </data>
  <data name="DietaryProfiles.ActivityLevelIsInvalid" xml:space="preserve">
    <value>Selected Activity level is not valid</value>
  </data>
  <data name="DietaryProfiles.AgeIsTooHighOrLow" xml:space="preserve">
    <value>The specified Birthday puts you below 4 or above 100 years old, which is not valid</value>
  </data>
  <data name="DietaryProfiles.BirthdayIsRequired" xml:space="preserve">
    <value>Birthday is required</value>
  </data>
  <data name="DietaryProfiles.GenderIsInvalid" xml:space="preserve">
    <value>Selected Gender is not valid</value>
  </data>
  <data name="DietaryProfiles.GenderIsRequired" xml:space="preserve">
    <value>Gender is required</value>
  </data>
  <data name="DietaryProfiles.GoalIsInvalid" xml:space="preserve">
    <value>Selected Dietary goal is not valid</value>
  </data>
  <data name="DietaryProfiles.HeightIsRequired" xml:space="preserve">
    <value>Height in either feet/inches or cm is required</value>
  </data>
  <data name="DietaryProfiles.WeightIsRequired" xml:space="preserve">
    <value>Weight in either pounds or kg is required</value>
  </data>
  <data name="Ingredients.UpdateIngredient.NameIsRequired" xml:space="preserve">
    <value>Name is required</value>
  </data>
  <data name="Ingredients.UpdateIngredient.NameMaxLength" xml:space="preserve">
    <value>Name cannot be longer than 50 characters</value>
  </data>
  <data name="IsLinkedToNonExistentTask" xml:space="preserve">
    <value>Ingredient is attached to a non-existent task</value>
  </data>
  <data name="Lists.CreateList.DuplicateTasks" xml:space="preserve">
    <value>There are duplicates in the text</value>
  </data>
  <data name="Lists.CreateList.NoTasks" xml:space="preserve">
    <value>No tasks have been found in the text</value>
  </data>
  <data name="Lists.CreateList.TasksNameMaxLength" xml:space="preserve">
    <value>Tasks cannot have a name longer than 50 characters</value>
  </data>
  <data name="Lists.ListLimitReached" xml:space="preserve">
    <value>You cannot create more than 50 lists, sorry</value>
  </data>
  <data name="Lists.ModifyList.IconIsRequired" xml:space="preserve">
    <value>Icon is required</value>
  </data>
  <data name="Lists.ModifyList.InvalidIcon" xml:space="preserve">
    <value>Selected Icon is not valid</value>
  </data>
  <data name="Lists.ModifyList.NameIsRequired" xml:space="preserve">
    <value>Name is required</value>
  </data>
  <data name="Lists.ModifyList.NameMaxLength" xml:space="preserve">
    <value>Name cannot be longer than 50 characters</value>
  </data>
  <data name="Lists.ShareList.UserDoesNotExist" xml:space="preserve">
    <value>User does not exist</value>
  </data>
  <data name="Recipes.ModifyRecipe.AmountMustBeBetween" xml:space="preserve">
    <value>If an amount is set it must be between 0.1 and 10000</value>
  </data>
  <data name="Recipes.ModifyRecipe.CookDurationRange" xml:space="preserve">
    <value>Cook Duration must be between 0 and 120 minutes</value>
  </data>
  <data name="Recipes.ModifyRecipe.DescriptionMaxLength" xml:space="preserve">
    <value>Description cannot be longer than 250 characters</value>
  </data>
  <data name="Recipes.ModifyRecipe.DuplicateIngredients" xml:space="preserve">
    <value>You have duplicate ingredients</value>
  </data>
  <data name="Recipes.ModifyRecipe.IngredientIsLinkedToNonExistentTask" xml:space="preserve">
    <value>Ingredient is linked to non-existent task</value>
  </data>
  <data name="Recipes.ModifyRecipe.IngredientNameIsRequired" xml:space="preserve">
    <value>Ingredient names are required</value>
  </data>
  <data name="Recipes.ModifyRecipe.IngredientNameMaxLength" xml:space="preserve">
    <value>Ingredient names cannot be longer than 50 characters</value>
  </data>
  <data name="Recipes.ModifyRecipe.InstructionsMaxLength" xml:space="preserve">
    <value>Instructions cannot be longer than 5000 characters</value>
  </data>
  <data name="Recipes.ModifyRecipe.InvalidUnit" xml:space="preserve">
    <value>The ingredient amount unit of measure was invalid for some of the ingredients</value>
  </data>
  <data name="Recipes.ModifyRecipe.NameIsRequired" xml:space="preserve">
    <value>Name is required</value>
  </data>
  <data name="Recipes.ModifyRecipe.NameMaxLength" xml:space="preserve">
    <value>Name cannot be longer than 50 characters</value>
  </data>
  <data name="Recipes.ModifyRecipe.OnlyYouTubeVideosAreCurrentlySupported" xml:space="preserve">
    <value>Only YouTube videos are currently supported</value>
  </data>
  <data name="Recipes.ModifyRecipe.PrepDurationRange" xml:space="preserve">
    <value>Prep Duration must be between 0 and 120 minutes</value>
  </data>
  <data name="Recipes.ModifyRecipe.ServingsMustBeBetween" xml:space="preserve">
    <value>The number of servings must be between 1 and 50</value>
  </data>
  <data name="Recipes.RecipeLimitReached" xml:space="preserve">
    <value>You cannot create more than 250 recipes, sorry</value>
  </data>
  <data name="Tasks.BulkCreate.DuplicateTasks" xml:space="preserve">
    <value>There are duplicates in the text</value>
  </data>
  <data name="Tasks.BulkCreate.NoTasks" xml:space="preserve">
    <value>No tasks have been found in the text</value>
  </data>
  <data name="Tasks.BulkCreate.SomeTasksAlreadyExist" xml:space="preserve">
    <value>Some of the tasks already exist</value>
  </data>
  <data name="Tasks.BulkCreate.TasksNameMaxLength" xml:space="preserve">
    <value>Tasks cannot have a name longer than 50 characters</value>
  </data>
  <data name="Tasks.BulkCreate.TextIsRequired" xml:space="preserve">
    <value>Text is required</value>
  </data>
  <data name="Tasks.ModifyTask.NameIsRequired" xml:space="preserve">
    <value>Name is required</value>
  </data>
  <data name="Tasks.ModifyTask.NameMaxLength" xml:space="preserve">
    <value>Name cannot be longer than 50 characters</value>
  </data>
  <data name="Tasks.UpdateTask.SelectedListAlreadyContainsMaxTasks" xml:space="preserve">
    <value>The selected list already contains the maximum of 250 tasks</value>
  </data>
  <data name="Tasks.UpdateTask.TheAssignedUserIsNotAMember" xml:space="preserve">
    <value>The assigned user is not a member of the list</value>
  </data>
  <data name="TasksPerListLimitReached" xml:space="preserve">
    <value>You cannot create more than 250 tasks per list, sorry</value>
  </data>
  <data name="Unauthorized" xml:space="preserve">
    <value>Unauthorized</value>
  </data>
</root>