@model LoginViewModel
@inject SignInManager<ApplicationUser> SignInManager
@inject IViewLocalizer Localizer
@{
    ViewData["Title"] = Localizer["LogIn"];
    ViewData["Description"] = Localizer["PageDescription"];
    ViewData["LoggedOut"] = true;

    var loginClass = string.Empty;
    if (Model.ButtonLabel == LoginButtonLabel.CookingAssistant)
    {
        loginClass = "cooking-assistant";
    }
    if (Model.ButtonLabel == LoginButtonLabel.Accountant)
    {
        loginClass = "accountant";
    }
}

@switch (Model.Alert)
{
    case LoginAlert.PasswordReset:
        <p class="alert success">@Localizer["PasswordResetSuccess"]</p>
        break;
    case LoginAlert.RegistrationEmailSent:
        <p class="alert success">@Localizer["RegistrationEmailSent"]</p>
        break;
    case LoginAlert.RegistrationEmailSentGmail:
        <p class="alert success">@Localizer["RegistrationEmailSentGmail"]</p>
        break;
    case LoginAlert.RegistrationEmailSentOutlook:
        <p class="alert success">@Localizer["RegistrationEmailSentOutlook"]</p>
        break;
    case LoginAlert.RegistrationEmailSentYahoo:
        <p class="alert success">@Localizer["RegistrationEmailSentYahoo"]</p>
        break;
    case LoginAlert.RegistrationConfirmed:
        <p class="alert success">@Localizer["RegistrationConfirmed"]</p>
        break;
    case LoginAlert.PasswordResetEmailSent:
        <p class="alert success">@Localizer["PasswordResetEmailSent"]</p>
        break;
    case LoginAlert.PasswordResetEmailSentGmail:
        <p class="alert success">@Localizer["PasswordResetEmailSentGmail"]</p>
        break;
    case LoginAlert.PasswordResetEmailSentOutlook:
        <p class="alert success">@Localizer["PasswordResetEmailSentOutlook"]</p>
        break;
    case LoginAlert.PasswordResetEmailSentYahoo:
        <p class="alert success">@Localizer["PasswordResetEmailSentYahoo"]</p>
        break;
    case LoginAlert.EmailConfirmationRequired:
        <p class="alert info">@Localizer["EmailConfirmationRequired"]</p>
        break;
    case LoginAlert.AccountDeleted:
        <p class="alert success">@Localizer["AccountDeleteSuccess"]</p>
        break;
    case LoginAlert.LanguageChanged:
        <p class="alert success">@Localizer["LanguageChangeSuccess"]</p>
        break;
}

<div @(loginClass != string.Empty ? $"class=\"{loginClass}\"" : "")>


    <form asp-controller="account" asp-action="login" method="post" role="form">
        <div asp-validation-summary="All" class="text-danger"></div>
        <input type="hidden" asp-for="ReturnUrl" />
        <div class="form-group">
            <input type="email" asp-for="Email" maxlength="254" placeholder="@Localizer["Email"]" aria-label="@Localizer["Email"]" required />
        </div>
        <div class="form-group relative">
            <input type="password" asp-for="Password" class="password-input" maxlength="100" placeholder="@Localizer["Password"]" aria-label="@Localizer["Password"]" required />
            <button type="button" class="password-show-button" data-for="Password">@Localizer["Show"]</button>
        </div>

        <footer class="login">
            <span></span>
            @switch (Model.ButtonLabel)
            {
                case LoginButtonLabel.ToDoAssistant:
                    <button type="submit" class="button">@Localizer["LogIntoToDoAssistant"]</button>
                    break;
                case LoginButtonLabel.CookingAssistant:
                    <button type="submit" class="button">@Localizer["LogIntoCookingAssistant"]</button>
                    break;
                case LoginButtonLabel.Accountant:
                    <button type="submit" class="button">@Localizer["LogIntoAccountant"]</button>
                    break;
                default:
                    <button type="submit" class="button">@Localizer["LogIn"]</button>
                    break;
            }
        </footer>
    </form>

    <div class="login-links">
        <div>
            <a asp-action="register" asp-controller="account" asp-route-returnUrl="@Model.ReturnUrl">@Localizer["DontHaveAnAccount"]</a>
        </div>
        <div>
            <a asp-action="forgot-password" asp-controller="account">@Localizer["ForgotYourPassword"]</a>
        </div>
    </div>

    <div class="links">
        <div>
            <a asp-action="privacy-policy" asp-controller="home">@Localizer["PrivacyPolicy"]</a>
        </div>
        <div>
            <a asp-action="about" asp-controller="home">@Localizer["About"]</a>
        </div>
    </div>
</div>

<script>
    var showLabel = "@Localizer["Show"]";
    var hideLabel = "@Localizer["Hide"]";
</script>
<environment include="Development">
    <script src="~/js/shared/password-show-hide.js" asp-append-version="true"></script>
</environment>
<environment include="Production">
    <script src="https://cdn.personalassistant.site/js/shared/password-show-hide.min.js"></script>
</environment>